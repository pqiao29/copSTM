% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/copSTM.R
\name{copSTMSelect}
\alias{copSTMSelect}
\title{Model selection of copula-base multivariate spatio-temporal model}
\usage{
copSTMSelect(x, y, K, n, temporal, cor_type, ModelCnt, B = 0,
  maxit1 = 50, maxit2 = 10, add_penalty = 0, Message_prog = TRUE,
  Message_res = TRUE, eps = 0.1)
}
\arguments{
\item{x}{A matrix of covariates generated by \code{make_data} or \code{sim_data}.}

\item{y}{A vector of count data response.}

\item{K}{The number of groups.}

\item{n}{An integer number, the image is tilled into n*n grids.}

\item{temporal}{Logical, if TRUE, generates response in temporal setting.
Otherwise, each d-dimnesional $y_i (i = 1, \dots, t_size)$ are generated independently.}

\item{cor_type}{A character string, one of "sp", "mv" and "both". 
Specifically, if "sp" (short for spatial), only spatial correlations of the same group from neighbouring tiles are captured; 
if "mv" (short for multivariate), only the correlations between groups in the same tile are captured; 
if "both", the model computes "sp" and "mv", as well as between-group correlation from neighbouring tiles.}

\item{ModelCnt}{The number of models to be generated via Gibbs samplling.}

\item{B}{The number of bootstrap samples to be generated for computing the penalty in CL-BIC and standard error of parameters.}

\item{maxit1}{The maximum number of iterations of maximum likelihood estimation (for full model).}

\item{maxit2}{The maximum number of iterations of maximum likelihood estimation (for sub-models),
expect to be much smaller than maxit1, since submodels take estimates from the full model as initial values.}

\item{add_penalty}{A tunning parameter to enforce sparsity. The larger this value is, the more favorable a sparse model becomes.}

\item{Message_prog}{Logical, if TRUE, prints messages indicating progress. (Suggest on if long computational time is expected)}

\item{Message_res}{Logical, if TRUE, prints the top 5 most frequently generated models.}

\item{eps}{Convergence threshold for maximum likelihood estimation.}
}
\value{
A list with components
\itemize{
\item \code{likelihood:}   Maximized log-likelihood. 
\item \code{coefficients:} A list of parameter estimates: 
                    \itemize{
                      \item \code{intercepts:}  A separate intercept for each group,
                       \item \code{main_effects:}  Regression parameters indicating temporal impacts on growth between groups,
                       \item \code{correlations:} Spatial and multivariate correlations of observations at the same time point.}
\item \code{selected_model:}  A binary vector with 1 indicating selected variables and 0 otherwise.
\item \code{standard_error:}  A list of estimated standard errors, in the same format as \code{coefficient}. Returned only if \code{std_err == TRUE}. 
}
}
\description{
\code{copSTMSelect} performs variable selection via Gibbs samplling on model \code{copSTM} using CL-BIC. (NEED REF)
}
\examples{
\dontrun{
## temporal setting 
set.seed(444)
K <- 2  # number of groups
n <- 10 # (squared root of) number of tiles
t_size <- 10 # number of time points
true_beta <- c(-1, 1, 0.5, -0.5, 0, 1)
true_rho <- c(-0.3, 0, 0.3, 0)
sim_dat <- sim_data(n, K, temporal = TRUE, t_size, 
                    true_beta, true_rho, cor_type = "both") 
# generate data in the same form returned by make_data

MdCnt <- 50
B <- 20 
gm <- 0.5  
set.seed(444)
start <- Sys.time()  # expected less than 2 mins 
select_est <- copSTMSelect(sim_dat$covariates, sim_dat$response, K = K, n = n, 
                               temporal = FALSE, cor_type = "both", 
                               ModelCnt = MdCnt, B = B, add_penalty = gm,
                               Message_prog = TRUE, Message_res = TRUE, eps = 0.1)
finish <- Sys.time()
print(finish - start)
as.numeric(as.logical(c(true_beta, true_rho)))
print(select_est$coefficients)
print(select_est$standard_error)
}

\dontrun{
### non-temporal setting (expect 3 mins)
start <- Sys.time()
set.seed(444)
K <- 2  # number of groups
n <- 10 # (squared root of) number of tiles
t_size <- 50 # number of time points
true_beta <- c(1, 0.8, -0.6, 0.4, 0, -0.2)
true_rho <- c(-0.3, 0, 0.3, 0)
sim_dat <- sim_data(n, K, temporal = FALSE, t_size, 
                    true_beta, true_rho, cor_type = "both") 
                    
MdCnt <- 20
gm <- 0.5 
start <- Sys.time()  # expected less than 2 mins 
select_est <- copSTMSelect(sim_dat$covariates, sim_dat$response, K = K, n = n, 
                               temporal = FALSE, cor_type = "both", 
                               ModelCnt = MdCnt, add_penalty = gm,
                               Message_prog = TRUE, Message_res = TRUE)
finish <- Sys.time()
print(finish - start)
as.numeric(as.logical(c(true_beta, true_rho)))
print(select_est$coefficients)
print(select_est$standard_error)
finish <- Sys.time()
print(finish - start)
}

}
\seealso{
\code{\link{sim_data}}, \code{\link{make_data}}
}
